@model PaginatedList<ProductOrderViewModel>

@{
    ViewData["Title"] = "訂單總覽";
}

@if (Model.Count != 0)
{
    <div class="container">
        <div class="py-5 text-center">
            <h2>訂單總覽</h2>
        </div>
        <div class="row g-5">
            @foreach (ProductOrderViewModel order in Model)
            {
                <div class="card mb-2 rounded-3 shadow-sm py-2">
                    <dl class="row">
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(modelitem => order.ReceiverName)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(modelitem => order.ReceiverName)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(modelitem => order.ReceiverPhone)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(modelitem => order.ReceiverPhone)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(modelitem => order.ReceiverAddress)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(modelitem => order.ReceiverAddress)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(modelitem => order.OrderDate)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(modelitem => order.OrderDate)
                        </dd>
                    </dl>
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>產品名稱</th>
                                <th>數量</th>
                                <th>小計</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in order.OrderItems)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelitem => item.ProductName)</td>
                                    <td>@Html.DisplayFor(modelitem => item.Quantity)</td>
                                    <td>@Html.DisplayFor(modelitem => item.Price)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <h5 class="text-r text-end">總計: $@Html.DisplayFor(modelitem => order.TotalPrice)</h5>
                </div>
            }
            <div class="p-2">
                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

                    <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       class="btn btn-primary @prevDisabled">
                        上一頁
                    </a>
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        string btnType = i == Model.PageIndex ? "btn-primary disabled" : "btn-primary";
                        <a asp-action="Index"
                           asp-route-pageNumber="@i"
                           class="btn @btnType">
                            @i
                        </a>
                    }
                    <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       class="btn btn-primary @nextDisabled">
                        下一頁
                    </a>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="py-5 text-center">
        <h2>尚未有下訂紀錄</h2>
    </div>
}